<?xml version="1.0"?>
<project name="beanfabrics-swing" default="main" basedir=".">
	<description>Build, test and deploy the Beanfabrics Swing module</description>
	<import file="${basedir}/../abstract_module_build.xml" />
					
	<!-- Folders and files -->
	<property name="src.main.java6.dir" location="${src.dir}/main/java6" />
	<property name="src.main.design.dir" location="${src.dir}/main/design" />
	<property name="target.classes.java6.dir" location="${target.dir}/classes6" />
					
	<!-- Filesets and paths -->
	<path id="compile.main.classpath" description="Classpath for compiling java5 runtime-classes">
		<path refid="global.compile.main.classpath" />
		<pathelement location="${basedir}/../beanfabrics-core/target/classes/" />
	</path>
	
	<path id="compile.main.java6.classpath" description="Classpath for compiling java6 runtime-classes">
		<path refid="compile.main.classpath" />
		<pathelement location="${target.classes.dir}" />
	</path>
					
	<path id="compile.main.design.classpath" description="Classpath for compiling design-time classes">
		<path refid="compile.main.classpath" />
		<pathelement location="${target.classes.dir}" />
	</path>
					
	<!--#################### Build targets ########################-->
	<target name="prepare-java6-classes-dir" depends="init">
		<mkdir dir="${target.dir}" />
		<delete dir="${target.classes.java6.dir}" />
		<mkdir dir="${target.classes.java6.dir}" />
	</target>
					
	<target name="compile-main-java6" depends="init, prepare-java6-classes-dir, compile-main">
		<echo message="current classpath: ${toString:compile.main.java6.classpath}" />
		<javac classpathref="compile.main.java6.classpath" destdir="${target.classes.java6.dir}"
			   source="1.6" target="1.6"
			   debug="${compile.debug}" deprecation="${compile.deprecation}"
			   optimize="${compile.optimize}">
			<src path="${src.main.java6.dir}" />
		</javac>
	</target>
					
	<target name="compile-main-design" depends="init, prepare-classes-dir, compile-main">
		<echo message="current classpath: ${toString:compile.main.design.classpath}" />
		<javac classpathref="compile.main.design.classpath" destdir="${target.classes.dir}"
			   source="${compile.source}" target="${compile.target}"
			   debug="${compile.debug}" deprecation="${compile.deprecation}"
			   optimize="${compile.optimize}">
			<src path="${src.main.design.dir}" />
		</javac>
	</target>
					
	<target name="compile" depends="init, init-version, compile-main, compile-main-design, compile-main-java6" description="Compile all sources without test">
	</target>
					
	<target name="create-manifest" depends="init, prepare-manifest">
		<path id="create.manifest.classpath">
			<fileset dir="${javabean-doclet.lib.dir}" includes="**/*.jar" />
		</path>
		<delete file="${target.manifest.file}" />
		<javadoc classpathref="run.javadoc.classpath" packagenames="org.beanfabrics" package="false">
			<fileset dir="${src.main.java.dir}" includes="**/*.java" />
			<fileset dir="${src.main.java6.dir}" includes="**/*.java" />
			<doclet name="org.beanfabrics.tools.javabean.doclet.JavaBeanManifestDoclet" pathref="create.manifest.classpath">
				<param name="-manifestDestination" value="${target.manifest.file}" />
			</doclet>
		</javadoc>
	</target>
					
	<target name="create-classes-jar" depends="init, prepare-dist, compile, create-manifest" description="Create jar with all classes">
		<jar destfile="${classes.jarfile}" manifest="${target.manifest.file}">
			<fileset dir="${target.classes.dir}"/>
			<fileset dir="${target.classes.java6.dir}"/>
			<manifest>
				<attribute name="Build-Date" value="${build.time}" />
				<attribute name="Build-Version" value="${project.version}" />
				<attribute name="Implementation-Title" value="${project.title}" />
				<attribute name="Implementation-Version" value="${project.version}" />
				<attribute name="Implementation-Vendor" value="${project.vendor}" />
			</manifest>
		</jar>
	</target>
					
	<target name="create-src-jar" depends="init, prepare-dist" description="Creates a JAR file with all sources.">
		<delete dir="${target.src.dir}" />
		<mkdir dir="${target.src.dir}" />
		<mkdir dir="${target.src.dir}/META-INF" />
		<copy todir="${target.src.dir}/META-INF">
			<fileset dir="${basedir}"
				     includes="build.version readme.txt license.txt 3rdparty-licenses.txt lgpl.txt" />
		</copy>
		<copy todir="${target.src.dir}">
			<fileset dir="${src.main.java.dir}" />
			<fileset dir="${src.main.resources.dir}" />
			<fileset dir="${src.main.java6.dir}" />
			<fileset dir="${src.main.design.dir}" />
		</copy>
	
		<jar destfile="${src.jarfile}">
			<fileset dir="${target.src.dir}" />
		</jar>
	</target>
</project>
